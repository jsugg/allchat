name: CI/CD Pipeline

on:
    push:
        branches: [master]

env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    BACKEND_IMAGE_NAME: allchat-backend
    FRONTEND_IMAGE_NAME: allchat-frontend
    SSH_HOST: ${{ secrets.SSH_HOST }}
    SSH_USER: ${{ secrets.SSH_USER }}
    SSH_KEY: ${{ secrets.SSH_KEY }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@master

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test
            - name: Create Multi-Platform Build Context
              run: |
                  docker buildx create --use --name mybuilder
                  docker buildx inspect --bootstrap
            - name: Build and Push Backend Image
              if: success()
              run: |
                  docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.DOCKER_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }} --push ./server
                  docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ env.DOCKER_PASSWORD }}
                  docker push ${{ env.DOCKER_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}
            - name: Build and Push Frontend Image
              run: |
                  docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }} --push .
                  docker push ${{ env.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}
            - name: Remove Multi-Platform Build Context
              run: docker buildx rm mybuilder

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest

        steps:
            - name: Deploy to SSH Host
              env:
                  SSH_KEY: ${{ env.SSH_KEY }}
              run: |
                  mkdir -p ~/.ssh/
                  echo "$SSH_KEY" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts
                  ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} '
                    docker pull ${{ env.DOCKER_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}
                    docker pull ${{ env.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}
                    cd allchat
                    docker-compose down
                    docker-compose up -d
                  '
